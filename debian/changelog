cutcell (0.0.3) natty; urgency=low

  * Remove IntersectionTest and UnionTest.
  * Add components to easily build a Debian package.
  * Add --as-needed --no-undefined to the linker flags.
  * Ignore my TODO file.
  * Split functionality out into separate files.
  * Make stream functions const (bug fixed in CGAL 3.7).
  * Add missing cassert header.
  * Convert nested std::vectors to boost::multi_array.
  * Remove unnecessary array.
  * Use simple triple for-loop instead of iterator.
  * Fix a few compile errors, and an assertion.
  * Fix missing ;
  * Ignore vim swap files.
  * Fix Grid constructor and assertion.
  * Change testcase to one about constructing a multi_array.
  * Fix CGNS error path...
  * Add cutcellcli.
  * Rename cutcellcli to cutcell.
  * Change testcase to one of iterating over facets.
  * Work on Nef_polyhedron directly. Output CGNS.
  * Fix CLI to read OFF and write CGNS.
  * Add GUI interface.
  * Remove requirement for Polyhedron to store plane normals.
  * Fix the GUI.
  * Remove visualisation_SNC.
  * Implement cubic button. Set allowed grid size values.
  * Add filters to file dialogs.
  * Add a debug message for cell number. Assert that the number of cells be positive non-zero.
  * Reorder GUI functions do they more closely match the layout.
  * Thread the cutcell work in the GUI and add status bar messages.
  * Ensure the grid size has been specified in the CLI.
  * Convert make_cube_3 to use Nef_polyhedron exclusively.
  * Make the cube have a point at the origin, instead of being centred on it.
  * Reorder widgets (implicitly fixes tab order)
  * Update the unit cube definition.
  * Implement cut cell output.
  * Implement a special case for fluid cells.
  * Split common code into a function.
  * Add short options to cutcell CLI.
  * Verbose polyhedron input with error checking.
  * Small cleanups.
  * Drastically improve memory usage.
  * Code cleanups.
  * Verbose polyhedron input and error checking for the GUI.
  * Optimise scanning the grid for solid points.
  * Optimise creating the list of grid coordinates.
  * Remove unused code.
  * Factor out some initialisation code.
  * Simplify debugging output slightly.
  * Add a counter for the cell types over the whole grid.
  * Optimise by pre-allocating CGNS arrays.
  * Compute the bounding box using integer arithmetic.
  * Add boundary faces.
  * Number the CGNS sections.
  * Correct the element numbers.
  * Factor out the computation of the grid size.
  * Add a diagnostic approximation of the memory used.
  * Store the triangulation of each cell.
  * Ignore Cut boundaries, instead of asserting.
  * Also write out Cut boundaries.
  * Fix a regression caused by 7ec6bcc3.
  * Write the boundary conditions as ElementLists.
  * Store _all_ Delaunay_triangulations.
  * Update copyright for 2011. Clarify make_cube_3 license.
  * Fix INSTALL instructions.

 -- Bruce Duncan <Bruce.Duncan@ed.ac.uk>  Thu, 28 Jul 2011 17:22:06 +0100

cutcell (0.0.2) maverick; urgency=low

  [ David Ingram ]
  * Created a simple CMakeLists.txt file to allow programes to be
    compiled
  * Created two new test for Intersection and Union, both these
    programmes start with the definition of a unit cube read from the
    file cube.nef3 as this is the fastest and most efficient way of
    initialising the data structures.
  * CMaleLists.txt has been updated to build both the new test files

  [ Bruce Duncan ]
  * Add make_cube_3 function from examples.
  * Convert Polyhedron to Nef_polyhedron and back, with
    Aff_transformation.
  * Use filtered, simple cartesian kernel with quotient float.
  * Make a grid of cubes and find the intersection.
  * Fix up UnitCube test case.
  * Move cube.nef3 into cutcell.cpp. Fix unsigned warning.
  * Output the grid as VRML2, other output to stderr.
  * Implement cell centroid.
  * Attempt to create testcase for Direction operator== bug.
  * Facet test case.
  * faceArea
  * Compute face properties.
  * Re-add a new make_cube_3 program.
  * Add visualisation program.
  * Add include ${CGAL_USE_FILE}
  * Add cutcell.cpp to CMakeLists.txt
  * Add .gitignore
  * Implement an Index_3 class for IJK of parent cell.
  * Add some assert statements.
  * Tidy up the code a bit.
  * Calculate the volume of cut cells.
  * Add comments and license.
  * Factor out the algorithm from the driver.
  * Hide data in container classes, provide access methods.
  * Move the test case back out of the algorithm. Oops!
  * Move N construction into array creation.
  * Split VRML output into separate function.
  * Create a stream modifier to allow different output formats.
  * Create a NEF output format.
  * Remove the global "UnitCube".
  * Fix bounds error on nested for loops.
  * Add more comments.
  * Create stub CGNS output.
  * Close and remove stub temporary file.
  * Google style guide cleanups.
  * More Google style guide cleanups.
  * Even more Google style guide cleanups.
  * Extend CGNS output with Base and Zone information.

 -- Bruce Duncan <Bruce.Duncan@ed.ac.uk>  Wed, 19 Jan 2011 17:23:49 +0000

cutcell (0.0.1) UNRELEASED; urgency=low

  * Initial release.

 -- Bruce Duncan <Bruce.Duncan@ed.ac.uk>  Thu, 29 Apr 2010 12:45:33 +0100
